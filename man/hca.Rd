% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hca.R
\name{hca}
\alias{hca}
\title{Hierarchical Clustering Analysis}
\usage{
hca(m = NULL, cr = FALSE, d = FALSE, hc = FALSE, ord = FALSE,
  clusters = FALSE, return.steps = FALSE, hc.method = "average",
  cor.method = "pearson", compute.dist = T,
  dist.method = "euclidean", ord.labels = T, h = NULL, k = NULL,
  min.cluster.size = 5, max.cluster.size = 0.8)
}
\arguments{
\item{m}{matrix. Default: NULL}

\item{cr}{correlation matrix. If provided, cr will not be computed with m. Default: FALSE}

\item{d}{dist object. If provided, d will not be computed from cr. Default: FALSE}

\item{hc}{hclust object. If provided, hc will not be computed with cr. Default: FALSE}

\item{ord}{ordered character vector, retrieved from hc. Default: FALSE}

\item{clusters}{list of clusters (character vectors), retrieved from hc. Default: FALSE}

\item{return.steps}{logical indicating whether to return intermediary steps. Default: FALSE}

\item{hc.method}{a character string indicating which agglomeration method to use. Default: 'average'}

\item{cor.method}{a character string indicating which correlation coefficient is to be computed. Default: 'pearson'}

\item{compute.dist}{a boolean value indicating whether a distance measure should be computed from the correlation metric. If FALSE, distances are computed from the correlation matrix directly. Default: T}

\item{dist.method}{a character string specifying the distance metric to be used for hierarchical clustering. Default: ''euclidean'}

\item{ord.labels}{if FALSE, will return ordered indices rather than character vector. Default: T}
}
\value{
object or list of objects. If the latter, a full list contains m (input matrix to be clustered), cr (correlation matrix), d (distance matrix), hc (hclust object), ord (char. vector), clusters (list of char. vectors).
}
\description{
Hierarchical clustering analysis. The function proceeds through the following steps: 1. Compute a correlation matrix; 2. Compute a distance matrix; 3. Compute hclust (hierarchical clustering) object; 4. Retrieve the clustered column order (included for practical usability purposes only); 5. Extract the clusters from the analysis (from the hclust object). 
Because each of these intermediary objects are useful, the function allows you to leave at any point to return the object of interest. Do this by setting the corresponding object argument to TRUE. The function also allows you to enter at any point to skip steps that you have already computed elsewhere. To do this provide the starting object to the corresponding argument. You can also choose to return all intermediary steps by setting return.steps = T.
}
\seealso{
\code{\link[stats]{cor}},\code{\link[stats]{hclust}},\code{\link[stats]{dist}}
}
